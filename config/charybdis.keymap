/*
    Улучшенный ZMK конфиг для Charybdis 4x6
    Современная эргономичная конфигурация с адаптивными возможностями
    Copyright (c) 2023 The ZMK Contributors
    SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// Слои
#define BASE 0
#define LOWER 1
#define SYMB 2
#define NAV 3
#define ADJUST 4
#define QWERTY 5
#define MOUSE 6
#define FUNC 7

// Современные настройки для оптимальной эргономики
&lt {
    tapping-term-ms = <175>;
    flavor = "balanced";
    quick-tap-ms = <125>;
    require-prior-idle-ms = <100>;
    hold-trigger-on-release;
};

&mt {
    tapping-term-ms = <175>;
    flavor = "balanced";
    quick-tap-ms = <125>;
    require-prior-idle-ms = <100>;
    hold-trigger-on-release;
};

&sk {
    release-after-ms = <1500>;
    quick-release;
    ignore-modifiers;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE DOT COMMA SLASH>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};

&key_repeat {
    usage-pages = <HID_USAGE_PAGE_KEYBOARD>;
};

/ {
    combos {
        compatible = "zmk,combos";
        
        // Основные комбо с улучшенными настройками
        combo_esc {
            timeout-ms = <30>;
            key-positions = <13 14>;
            bindings = <&kp ESC>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_tab {
            timeout-ms = <30>;
            key-positions = <25 26>;
            bindings = <&kp TAB>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_enter {
            timeout-ms = <30>;
            key-positions = <33 34>;
            bindings = <&kp ENTER>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        // Улучшенные билатеральные комбо для скобок
        combo_lpar {
            timeout-ms = <25>;
            key-positions = <3 4>;
            bindings = <&kp LPAR>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_rpar {
            timeout-ms = <25>;
            key-positions = <7 8>;
            bindings = <&kp RPAR>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_lbkt {
            timeout-ms = <25>;
            key-positions = <15 16>;
            bindings = <&kp LBKT>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_rbkt {
            timeout-ms = <25>;
            key-positions = <19 20>;
            bindings = <&kp RBKT>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_lbrc {
            timeout-ms = <25>;
            key-positions = <27 28>;
            bindings = <&kp LBRC>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_rbrc {
            timeout-ms = <25>;
            key-positions = <31 32>;
            bindings = <&kp RBRC>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        // Быстрые действия
        combo_copy {
            timeout-ms = <30>;
            key-positions = <26 27>;
            bindings = <&kp LC(C)>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <150>;
        };
        
        combo_paste {
            timeout-ms = <30>;
            key-positions = <27 28>;
            bindings = <&kp LC(V)>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <150>;
        };
        
        combo_cut {
            timeout-ms = <30>;
            key-positions = <25 26>;
            bindings = <&kp LC(X)>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <150>;
        };
        
        combo_undo {
            timeout-ms = <30>;
            key-positions = <24 25>;
            bindings = <&kp LC(Z)>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <150>;
        };
        
        combo_select_all {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp LC(A)>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <150>;
        };
        
        // Дополнительные удобные комбо
        combo_del_word {
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&kp LA(BACKSPACE)>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_caps_word {
            timeout-ms = <30>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        // Функциональные слои
        combo_func {
            timeout-ms = <40>;
            key-positions = <0 11>;
            bindings = <&tog FUNC>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
        
        combo_mouse {
            timeout-ms = <40>;
            key-positions = <40 41>;
            bindings = <&tog MOUSE>;
            layers = <BASE QWERTY>;
            require-prior-idle-ms = <100>;
        };
    };

    behaviors {
        // Продвинутые home row mods с cross-hand only
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 42 43 44 45 46 47>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        // Adaptive keys - умные клавиши
        adapt_ctrl_esc: adaptive_ctrl_esc {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
        };

        adapt_shift_enter: adaptive_shift_enter {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
        };

        // Callum-style mods - oneshot behaviors
        osl_lower: oneshot_lower {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            release-after-ms = <1500>;
            quick-release;
            ignore-modifiers;
        };

        osl_symb: oneshot_symb {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            release-after-ms = <1500>;
            quick-release;
            ignore-modifiers;
        };

        // Smart layer с auto-repeat
        smart_layer: smart_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
            hold-trigger-on-release;
        };

        // Auto-repeat для навигации
        nav_repeat: navigation_repeat {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&key_repeat>, <&kp>;
        };

        // Улучшенные sticky keys
        ss: sticky_shift_improved {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1500>;
            quick-release;
            ignore-modifiers;
        };

        // Swapper для Alt-Tab
        swapper: alt_tab_swapper {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <41>;
        };

        // Современные tap dance
        dt_lang: lang_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&lang_switch>, <&to QWERTY>, <&caps_word>;
        };
        
        dt_shift_caps: shift_caps_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ss LSHFT>, <&caps_word>, <&kp CAPS>;
        };

        // Умные punctuation mod-morph
        comma_semi: comma_semicolon_smart {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_LALT|MOD_LCTRL|MOD_RGUI|MOD_RALT|MOD_RCTRL)>;
        };

        dot_colon: dot_colon_smart {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_LALT|MOD_LCTRL|MOD_RGUI|MOD_RALT|MOD_RCTRL)>;
        };
        
        slash_qmark: slash_question_smart {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LGUI|MOD_LALT|MOD_LCTRL|MOD_RGUI|MOD_RALT|MOD_RCTRL)>;
        };

        // Bilaterally combined mods
        bilateral_shift: bilateral_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            bindings = <&kp>, <&ss>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };
    };

    macros {
        // Переключение языка с улучшенной совместимостью
        lang_switch: lang_switch_improved {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI>,
                       <&macro_tap &kp SPACE>,
                       <&macro_release &kp LGUI>;
        };

        // Улучшенная навигация между приложениями
        app_switch: app_switcher {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI>,
                       <&macro_tap &kp TAB>,
                       <&macro_release &kp LGUI>;
        };

        // Навигация между рабочими столами с Mission Control
        next_desktop: next_desktop_improved {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LCTRL>,
                       <&macro_tap &kp RIGHT>,
                       <&macro_release &kp LCTRL>;
        };

        prev_desktop: prev_desktop_improved {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LCTRL>,
                       <&macro_tap &kp LEFT>,
                       <&macro_release &kp LCTRL>;
        };

        // Умная навигация между вкладками
        next_tab: next_tab_smart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI>,
                       <&macro_tap &kp RBKT>,
                       <&macro_release &kp LGUI>;
        };

        prev_tab: prev_tab_smart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI>,
                       <&macro_tap &kp LBKT>,
                       <&macro_release &kp LGUI>;
        };

        // Улучшенный оконный менеджмент
        win_left: window_left_improved {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI &kp LALT>,
                       <&macro_tap &kp LEFT>,
                       <&macro_release &kp LGUI &kp LALT>;
        };

        win_right: window_right_improved {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI &kp LALT>,
                       <&macro_tap &kp RIGHT>,
                       <&macro_release &kp LGUI &kp LALT>;
        };

        win_max: window_maximize_improved {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI &kp LALT>,
                       <&macro_tap &kp UP>,
                       <&macro_release &kp LGUI &kp LALT>;
        };

        win_min: window_minimize {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI>,
                       <&macro_tap &kp M>,
                       <&macro_release &kp LGUI>;
        };

        // Современные быстрые действия
        screenshot: screenshot_improved {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI &kp LSHFT>,
                       <&macro_tap &kp N4>,
                       <&macro_release &kp LGUI &kp LSHFT>;
        };

        spotlight: spotlight_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_press &kp LGUI>,
                       <&macro_tap &kp SPACE>,
                       <&macro_release &kp LGUI>;
        };

        // Программирование макросы
        arrow_macro: arrow_function {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp EQUAL &kp GT>;
        };

        fat_arrow: fat_arrow_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp EQUAL &kp GT>;
        };

        pipe_op: pipe_operator {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp PIPE &kp GT>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER SYMB>;
            then-layer = <ADJUST>;
        };
        nav_func_layer {
            if-layers = <NAV FUNC>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Основной слой (Colemak-DH с современными улучшениями)
        BASE {
            bindings = <
&kp TAB         &kp B          &kp Y          &kp O          &kp U          &kp SQT                                              &kp MINUS       &kp L          &kp D          &kp W          &kp V          &kp Z
&adapt_ctrl_esc LCTRL ESC &hml LGUI C    &hml LALT I    &hml LCTRL E   &hml LSHFT A   &comma_semi                                          &dot_colon      &hmr RSHFT H    &hmr RCTRL T    &hmr RALT S     &hmr RGUI N     &kp Q
&bilateral_shift LSHFT LSHFT &kp G          &kp X          &kp J          &kp K          &slash_qmark                                         &kp SEMI        &kp R          &kp M          &kp F          &kp P          &adapt_shift_enter RSHFT ENTER
&kp UNDER       &kp LALT       &swapper       &kp LGUI       &dt_lang                                                            &key_repeat     &smart_layer SYMB BSPC &osl_lower NAV
                                                              &smart_layer LOWER SPACE &mkp LCLK      &mkp RCLK
            >;
        };

        // Нижний слой - цифры и навигация с улучшениями
        LOWER {
            bindings = <
&kp GRAVE       &kp N1         &kp N2         &kp N3         &kp N4         &kp N5                                               &kp N6          &kp N7         &kp N8         &kp N9         &kp N0         &kp DEL
&trans          &kp F1         &kp F2         &kp F3         &kp F4         &kp F5                                               &kp F6          &kp N4         &kp N5         &kp N6         &kp SLASH      &kp ASTRK
&trans          &prev_desktop  &prev_tab      &next_tab      &next_desktop  &kp EQUAL                                            &kp N0          &kp N1         &kp N2         &kp N3         &kp DOT        &trans
&trans          &trans         &trans         &trans         &trans                                                              &trans          &kp DEL        &trans
                                                              &trans         &trans         &trans
            >;
        };

        // Символьный слой с улучшенной эргономикой
        SYMB {
            bindings = <
&kp TILDE       &kp EXCL       &kp AT         &kp HASH       &kp DLLR       &kp PRCNT                                            &kp CARET       &kp AMPS       &kp LBKT       &kp RBKT       &kp PRCNT      &kp BSPC
&kp GRAVE       &kp PIPE       &kp MINUS      &kp PLUS       &kp EQUAL      &kp HASH                                             &fat_arrow      &kp COLON      &kp LPAR       &kp RPAR       &kp QMARK      &kp SQT
&trans          &kp CARET      &kp FSLH       &kp STAR       &kp BSLH       &pipe_op                                             &kp TILDE       &kp DLLR       &kp LBRC       &kp RBRC       &kp EXCL       &trans
&trans          &trans         &trans         &trans         &trans                                                              &trans          &trans         &trans
                                                              &kp SPACE      &trans         &trans
            >;
        };

        // Навигационный слой с автоповтором
        NAV {
            bindings = <
&swapper        &kp C_PREV     &kp C_PP       &kp C_NEXT     &kp C_VOL_UP   &screenshot                                         &kp PG_UP       &win_left      &nav_repeat 0 UP    &win_right     &win_max       &win_min
&trans          &kp LGUI       &kp LALT       &kp LCTRL      &kp LSHFT      &kp C_VOL_DN                                         &kp PG_DN       &nav_repeat 0 LEFT &nav_repeat 0 DOWN &nav_repeat 0 RIGHT &kp HOME       &kp END
&trans          &spotlight     &app_switch    &kp LC(X)      &kp LC(C)      &kp LC(V)                                            &kp LC(Z)       &kp HOME       &kp END        &kp INS        &kp DEL        &trans
&trans          &trans         &trans         &trans         &trans                                                              &trans          &trans         &trans
                                                              &trans         &trans         &trans
            >;
        };

        // Настроечный слой с расширенными возможностями
        ADJUST {
            bindings = <
&trans          &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                                         &kp C_BRI_UP    &kp F7         &kp F8         &kp F9         &kp F10        &trans
&trans          &bt BT_CLR     &trans         &trans         &trans         &out OUT_TOG                                         &kp C_BRI_DN    &kp F4         &kp F5         &kp F6         &kp F11        &trans
&trans          &bootloader    &sys_reset     &trans         &trans         &trans                                               &kp C_MUTE      &kp F1         &kp F2         &kp F3         &kp F12        &trans
&trans          &trans         &trans         &trans         &to BASE                                                            &trans          &trans         &to BASE
                                                              &trans         &trans         &trans
            >;
        };

        // QWERTY слой (для совместимости)
        QWERTY {
            bindings = <
&kp TAB         &kp Q          &kp W          &kp E          &kp R          &kp T                                                &kp Y           &kp U          &kp I          &kp O          &kp P          &kp LBKT
&adapt_ctrl_esc LCTRL ESC &hml LGUI A    &hml LALT S    &hml LCTRL D   &hml LSHFT F   &kp G                                                &kp H           &hmr RSHFT J    &hmr RCTRL K    &hmr RALT L     &hmr RGUI SEMI  &kp SQT
&bilateral_shift LSHFT LSHFT &kp Z          &kp X          &kp C          &kp V          &kp B                                                &kp N           &kp M          &comma_semi    &dot_colon     &kp SLASH      &adapt_shift_enter RSHFT ENTER
&kp UNDER       &kp LALT       &swapper       &kp LGUI       &to BASE                                                            &key_repeat     &smart_layer SYMB BSPC &osl_lower NAV
                                                              &smart_layer LOWER SPACE &mkp LCLK      &mkp RCLK
            >;
        };

        // Мышиный слой с улучшенным управлением трекболом
        MOUSE {
            bindings = <
&trans          &trans         &trans         &trans         &trans         &trans                                               &trans          &msc SCRL_LEFT &msc SCRL_UP   &msc SCRL_RIGHT &trans         &trans
&trans          &trans         &trans         &trans         &trans         &trans                                               &trans          &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP   &mmv MOVE_RIGHT &trans
&trans          &trans         &trans         &trans         &trans         &trans                                               &trans          &trans         &msc SCRL_DOWN &trans         &trans         &trans
&trans          &trans         &trans         &trans         &tog MOUSE                                                          &mkp RCLK       &mkp LCLK      &tog MOUSE
                                                              &mkp LCLK      &mkp MCLK      &mkp RCLK
            >;
        };

        // Функциональный слой
        FUNC {
            bindings = <
&trans          &kp F1         &kp F2         &kp F3         &kp F4         &kp F5                                               &kp F6          &kp F7         &kp F8         &kp F9         &kp F10        &trans
&trans          &kp F11        &kp F12        &trans         &trans         &trans                                               &trans          &trans         &trans         &trans         &trans         &trans
&trans          &trans         &trans         &trans         &trans         &trans                                               &trans          &trans         &trans         &trans         &trans         &trans
&trans          &trans         &trans         &trans         &tog FUNC                                                           &trans          &trans         &tog FUNC
                                                              &trans         &trans         &trans
            >;
        };
    };
};
